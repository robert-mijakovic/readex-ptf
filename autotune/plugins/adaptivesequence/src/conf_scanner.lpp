%{
#include <iostream>
//#include "y.tab.h"
#include "conf_parser.hpp"
using namespace std;
#define YY_DECL extern "C" int yylex()
int line_num = 1;
%}
%option noyywrap
%x VARS
%x VALUES
%x INTERVAL
%x COMMENT
%x LINE
%x MPI_TYPE
%x OPERAND
%x PATHSTMT
%%

[ \t]                       { ;}
plugins                     { return PLUGINS; }
threshold                   { return THRESHOLD; }
\[                          |
\]                          |
\;                          |
\=                          |
\{                          |
\}                          |
","                         { return yytext[0]; }
"//".*"\n"                  { line_num++; }
"\n"                        { line_num++; }
[0-9]+                      { yylval.ival = atoi(yytext); return INT; }
[0-9]+\.[0-9]+              { yylval.fval = atof(yytext); return FLOAT; }
\"[\-a-zA-Z0-9_\ /\.-= ]+\" { yylval.sval = strdup(yytext)+1; yylval.sval[strlen(yylval.sval)-1]='\0';return STRING; }
.                           { printf ("Error: (%c), Line %d\n", yytext[0], line_num); return (yytext[0]); }
%%