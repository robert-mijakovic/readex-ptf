%{
#include <iostream>
//#include "y.tab.h"
#include "conf_parser.hpp"
using namespace std;
#define YY_DECL extern "C" int yylex()
int line_num = 1;
%}
%option noyywrap
%x VARS
%x VALUES
%x INTERVAL
%x COMMENT
%x LINE
%x MPI_TYPE
%x OPERAND
%x PATHSTMT
%%

[ \t]                       {;}
makefile_path               {return MAKEPATH;}
makefile_flags_var          {return MAKEVAR;}
required_flags              {return REQFLAGS;}
makefile_args               {return MAKEARGS;}
application_src_path        {return APPLSRC;}
make_selective              {return MAKESELECT;}
selective_file_list         {return FILELIST;}
search_algorithm            {return SEARCHALG;}
individual_keep             {return INDIVIDUALKEEP;}
sample_count                {return SAMPLECOUNT;}
gde3_population_size        {return GDE3POPSIZE;}
minutes_to_search           {return MINUTESTOSEARCH;}
results_file                {return RESULTSFILE;}
machine_learning            {return MACHINELEARNING;}
opencl_tuning               {return OPENCLTUNING;}
remote_make                 {return REMOTEMAKE;}
identity_path               {return IDENTITYPATH;}
remote_make_machine_name    {return REMOTEMAKEMACHINENAME;}
routine                     {return ROUTINE;}
tp                          {return TP;}
compiler                    {return COMPILER;}
\[                          |
\]                          |
\;                          |
\=                          |
","                         {return yytext[0];}
"//".*"\n"                  {line_num++;}
"\n"                        {line_num++;}
[0-9]+                      {yylval.ival = atoi(yytext); return INT; }
\"[\-a-zA-Z0-9_~*\,\)\(\ /\.-= ]+\" {yylval.sval = strdup(yytext)+1; yylval.sval[strlen(yylval.sval)-1]='\0';return STRING;}
.                           {printf ("Error: (%c), Line %d\n", yytext[0], line_num); return (yytext[0]);}
%%
